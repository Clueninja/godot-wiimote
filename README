#XWiimote-Godot

XWiimote-Godot is a GNU/Linux shared library API for communication between godot GDscript to the xwiimote kernel API


# Requirements:
linux kernel 3.1 or newer (3.11 or newer recommended)
bluez-4.101 or newer (bluez-5.0 or newer recommended)



I'm not sure if your user needs to be in the input group in order to run this without escalating privileges
if so add your user to the 'input' group

then run 
"$scons platform=linux"
in the directory


## Prerequisites
xwiimote-2 (included in kernel since linux-3.1)

SCons

[godot-cpp](https://github.com/godotengine/godot-cpp)

## Setting up GDNative C++

follow
	https://docs.godotengine.org/en/stable/tutorials/plugins/gdnative/gdnative-cpp-example.html

until Creating a simple Plugin

## Building xwiimote-godot
place godot-cpp in same directory as the src directory and Sconstruct file
run 
'$ scons platform=linux target=release'
 in the module folder.
 
This will create 'libxwiimote-godot.so' in the '/wiimote/bin/x11' directory which will execute when the library is loaded from gdscript.

To change the target directory to your program eg example edit the SConstruct file line 14 from 'wiimote/bin' to 'example/bin'

## Setting up your own project

To check for connected devices, use .list_devices() which will print out "Found device #" for each device connected

1: set the interface using the .set_iface(int num) method. This sets the interface for the object so acceleration data, button data, etc can be read

2: open the interface for reading .open_iface()

3: to set internal values you need to poll the device, use .poll_iface() then to access the data use,

.accel_X(), _Y(), _Z()

.button_A(), _B(), _LEFT(), _RIGHT(), _UP(), _DOWN(), _HOME(), _PLUS(), _MINUS(), _ONE(), _TWO() 

.ir_X(), _Y()

.motionplus_X(), _Y(), _Z()


[xwiimote website](https://dvdhrm.github.io/xwiimote)
